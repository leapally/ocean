name: 'Ocean CTest'
description: 'Downloads ocean build output and runs ctest in given subdirectory'

inputs:
  build-config:
    description: 'The build config (Debug or Release)'
    required: true
  build-path:
    description: 'The build path used during the build step'
    required: true
  install-path:
    description: 'The install path used during the build step'
    required: true
  test-directory:
    description: 'The subdirectory within build path to be tested'
    required: true
    default: ''
  ctest-args:
    description: 'Any arguments to be passed to ctest'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get upgrade -y
        sudo apt-get install -y -o Acquire::Retries=5 \
          git ninja-build zip libx11-dev libgtk-3-dev \
          liblzma-dev libgl1-mesa-dev libxcb-glx0-dev \
          libdeflate-dev libudev-dev zlib1g-dev
      shell: bash

    - name: Install a newer CMake
      run: |
        sudo apt purge --auto-remove cmake
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
        sudo apt-add-repository -y 'deb https://apt.kitware.com/ubuntu/ jammy main'
        sudo apt update
        sudo apt install -y cmake
      shell: bash

    - id: config-case
      uses: ASzc/change-string-case-action@v6
      with:
        string: ${{ inputs.build-config }}

    - name: Restore build artifacts
      id: restore-build
      uses: actions/cache/restore@v4
      with:
        key: ocean-build-${{ steps.config-case.outputs.lowercase }}-${{ github.sha }}
        path: ${{ inputs.build-path }}

    - name: Run tests
      run: |
        mkdir -p $INSTALL_PATH/bin
        cd $TEST_PATH
        ctest $CTEST_ARGS
      env:
        INSTALL_PATH: ${{ inputs.install-path }}/linux_static_${{ inputs.build-config }}
        TEST_PATH: ${{ inputs.build-path }}/linux_static_${{ inputs.build-config }}/${{ inputs.test-directory }}
        CTEST_ARGS: ${{ inputs.ctest-args }}
      shell: bash
