# This workflow tests Ocean on Linux (static)
# Based on : https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Test Ocean on Linux (static)

on:
  workflow_run:
    workflows: ["Build Ocean on Linux (static)"]
    branches: [main]
    types:
      - completed

env:
  OCEAN_LINK_TYPE: static

  OCEAN_BUILD_PATH: ${{ github.workspace }}/ocean_build
  OCEAN_INSTALL_PATH: ${{ github.workspace }}/ocean_install

jobs:
  testbase:
    name: Run ctest in testbase (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testbase
          # Exclude tests that are known to fail
          ctest-args: '-E TestHighPerformanceTimer|TestSignal'

  testcv-AdvancedFrame:
    name: Run ctest in testcv (TestAdvancedFrame) (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testcv
          ctest-args: '-j 16 -R TestAdvancedFrame'

  testcv-FrameConverter:
    name: Run ctest in testcv (TestFrameConverter) (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testcv
          ctest-args: '-j 16 -R TestFrameConverter'

  testcv-FrameFilterScharr:
    name: Run ctest in testcv (TestFrameFilterScharr) (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testcv
          ctest-args: '-j 16 -R TestFrameFilterScharr'

  testcv-FrameFilter-Other:
    name: Run ctest in testcv (TestFrameFilter Other) (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testcv
          # Exclude tests covered by previous job
          ctest-args: '-j 16 -R TestFrameFilter -E TestFrameFilterScharr'

  testcv-FrameVariance:
    name: Run ctest in testcv (TestFrameVariance) (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testcv
          ctest-args: '-j 16 -R TestFrameVariance'

  testcv-Frame-Other:
    name: Run ctest in testcv (TestFrame Other) (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testcv
          # Exclude tests covered by previous jobs
          # Exclude tests that are known to fail
          ctest-args: '-j 16 -R TestFrame -E TestFrameConverter|TestFrameFilter|TestFrameVariance|TestFrameInterpolator.ResizeUseCase_'

  testcv-Other:
    name: Run ctest in testcv (Other) (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testcv
          # Exclude tests covered by other jobs
          # Exclude test(s) known to fail
          ctest-args: '-j 16 -E TestAdvancedFrame|TestFrame|TestFASTDetector.StandardStrength'

  testdevices:
    name: Run ctest in testdevices (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testdevices

  testgeometry:
    name: Run ctest in testgeometry (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testgeometry
          # Exclude tests that are known to fail
          ctest-args: '-E TestStereoscopicGeometry.CameraPose_6DOF_100'

  testio:
    name: Run ctest in testio (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testio
          # Exclude tests that are known to fail
          ctest-args: '-E TestBasemap'

  testmath:
    name: Run ctest in testmath (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testmath
          ctest-args: '-E TestEquation.CubicEquation'

  testmedia:
    name: Run ctest in testmedia (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testmedia

  testnetwork:
    name: Run ctest in testnetwork (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testnetwork

  testtracking:
    name: Run ctest in testtracking (${{ matrix.build_config }}, static)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_config: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ctest
        with:
          build-config: ${{ matrix.build_config }}
          build-path: ${{ env.OCEAN_BUILD_PATH }}
          install-path: ${{ env.OCEAN_INSTALL_PATH }}
          test-directory: impl/ocean/test/testtracking
          # Exclude tests that are known to fail
          ctest-args: '-E TestHomographyImageAlignmentDense.InverseCompositional_2'
